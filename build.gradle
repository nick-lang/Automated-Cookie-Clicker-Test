/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.3/userguide/java_library_plugin.html
 */

// Apply the java-library plugin to add support for Java Library
apply plugin: 'java-library'
apply plugin: 'java'
apply plugin: 'groovy'

// In this section you declare where to find the dependencies of your project
repositories {
    mavenCentral()
}

dependencies {
	testCompile group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '2.41.0'
	compile group: 'org.seleniumhq.selenium', name: 'selenium-chrome-driver', version: '2.23.0'

    
	compile 'org.codehaus.groovy:groovy-all:2.4.5'
	testCompile 'io.cucumber:cucumber-groovy:2.0.1'
	testCompile 'io.cucumber:cucumber-junit:2.4.0'
	testCompile 'junit:junit:4.12'
}

//Used for below code block
configurations {
    cucumberRuntime {
        extendsFrom testRuntime
    }
}

//Slightly modified boilerplate code (I'm not sure where I found it)
//This code may be what is breaking the ability to use hooks, or it could be RunCukeTests.groovy
task cucumber() {
	dependsOn testClasses
	doLast {
		javaexec {
			main = "cucumber.api.cli.Main"
			classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
			args = [
				'--plugin', 'pretty',
				'--tags', 'not @wip',
				'--glue', 'src/test/groovy', 'src/test/cucumber'
			]
		}
	}
}
